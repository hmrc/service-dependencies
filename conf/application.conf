# Copyright 2020 HM Revenue & Customs
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# This is the main configuration file for the application.
# ~~~~~

include "backend.conf"

appName = service-dependencies


# Global request handler
# ~~~~
play.http.requestHandler = "uk.gov.hmrc.play.bootstrap.http.RequestHandler"

# Secret key
# ~~~~~
# The secret key is used to secure cryptographics functions.
# If you deploy your application to several instances be sure to use the same key!
play.http.secret.key = "jIk4O9ZvQkKdIgAuSYctYsdxPCTfz0wpeJ6kTBZmdcdxaHTug4gq9p4Yv2VqncPX"

# The application languages
# ~~~~~
play.i18n.langs = ["en"]



play.modules.enabled += "uk.gov.hmrc.play.bootstrap.backend.BackendModule"
play.modules.enabled += "uk.gov.hmrc.play.bootstrap.HttpClientModule"
play.modules.enabled += "uk.gov.hmrc.play.bootstrap.AuditModule"
play.modules.enabled += "uk.gov.hmrc.play.bootstrap.graphite.GraphiteMetricsModule"
play.modules.enabled += "uk.gov.hmrc.servicedependencies.Module"
play.modules.enabled += "uk.gov.hmrc.mongo.play.PlayMongoModule"

play.application.loader= "uk.gov.hmrc.play.bootstrap.ApplicationLoader"


play.http.errorHandler = "uk.gov.hmrc.play.bootstrap.backend.http.JsonErrorHandler"

play.http.filters="uk.gov.hmrc.servicedependencies.config.Filters"

play.filters.cors {
  # allow all paths
  pathPrefixes = ["/"]
  # allow all origins (You can specify if you want)
  allowedOrigins = null
  allowedHttpMethods = ["GET", "POST", "PUT", "DELETE"]
  # allow all headers
  allowedHttpHeaders = null
}


# Router
# ~~~~~
# Define the Router object to use for this application.
# This router will be looked up first when the application is starting up,
# so make sure this is the entry point.
# Furthermore, it's assumed your route file is named properly.
# So for an application router like `my.application.Router`,
# you may need to define a router file `conf/my.application.routes`.
# Default to Routes in the root package (and conf/routes)
# !!!WARNING!!! DO NOT CHANGE THIS ROUTER
play.http.router = prod.Routes


# Controller
# ~~~~~
# By default all controllers will have authorisation, logging and
# auditing (transaction monitoring) enabled.
# The below controllers are the default exceptions to this rule.

controllers {
  # 300 is the default, you may need to change this according to your needs
  confidenceLevel = 300

  com.kenshoo.play.metrics.MetricsController = {
    needsAuth = false
    needsLogging = false
    needsAuditing = false
  }

  uk.gov.hmrc.servicedependencies.controller.ServiceMetaController = {
    needsAuth = false
    needsLogging = false
    needsAuditing = false
  }

  uk.gov.hmrc.servicedependencies.controller.ServiceDependenciesController = {
    needsAuth = false
    needsLogging = true
    needsAuditing = false
  }

}


# Evolutions
# ~~~~~
# You can disable evolutions if needed
# evolutionplugin=disabled

# Metrics plugin settings - graphite reporting is configured on a per env basis
metrics {
  name = ${appName}
  rateUnit = SECONDS
  durationUnit = SECONDS
  showSamples = true
  jvm = true
  enabled = true
}

auditing {
  enabled = false
  traceRequests = false
}

microservice {
  metrics {
    graphite {
      host = graphite
      port = 2003
      prefix = play.${appName}.
      enabled = false
    }
  }

  services {

    teams-and-repositories {
      host = "localhost"
      port = 9015

      cache.expiration = 1 hour
    }

    service-configs {
      host = "localhost"
      port = 8460

      cache.expiration = 10 minute
    }

   releases-api {
      host = "localhost"
      port = 8008
    }
  }
}

dependencyReload.scheduler.enabled      = false
dependencyReload.scheduler.interval     = 100.minutes
dependencyReload.scheduler.initialDelay = 1.minute

dependencyVersionsReload.scheduler.enabled      = false
dependencyVersionsReload.scheduler.interval     = 100.minutes
dependencyVersionsReload.scheduler.initialDelay = 1.minute

repositoryDependencies.slugJob.enabled      = false
repositoryDependencies.slugJob.interval     = 10 minutes
repositoryDependencies.slugJob.initialDelay = 1 minute

repositoryDependencies.bobbyRulesSummaryScheduler.enabled      = false
repositoryDependencies.bobbyRulesSummaryScheduler.interval     = 10 minutes
repositoryDependencies.bobbyRulesSummaryScheduler.initialDelay = 1 minute

mongodb {
  uri = "mongodb://localhost:27017/service-dependencies"
}

curated.config.path = "/dependency-versions-config.json"

github-access-token = ""
decomissionedServicesUrl = "https://raw.githubusercontent.com/hmrc/deploy-with-docktor/master/decommissioning/microservices-to-decommission.yaml"

artefact {
  receiver {
    enabled                 = false
    aws.sqs.queue-prefix    = "change_me"
    aws.sqs.queue-slug      = "change_me"
  }
}

artifactory.url    = "https://change.this.to.artifactory.url/artifactory"
